# 애플리케이션 구조
## 초기화
모든 플라스크 애플리케이션은 애플리케이션 인스턴스를 생성해야 한다.
웹서버는 클라이언트로부터 수신한 모든 리퀘스트를 오브젝트에서 처리한다.
이때 웹 서버 게이트웨이 인터페이스라는 프로토콜을 사용한다. 
이것의 인스턴스는 flask 클래스의 오브젝트이며 다음과 같이 생성된다.
```
from flask import Flask
app = Flask(__name__)
```  
flask 클래스 생성자에 필요한 한가지는 메인 모듈의 이름이나 애플리케이션의 패키지 이름이다.

☆url과 url를 처리하는 함수의 관련성을 라우팅이라고 한다.

## 정규표현식

복잡한 문자열을 처리할 때 사용하는 기법이다. 파이썬 뿐만 아니라, 모든곳에서 사용된다.

# 파이썬 함수

## 계단함수와 시그모이드 함수 비교
계단함수는 0과 1중 한개만 돌려주고, 시그모이드 함수는 부드러운 곡선ㅇ로 된다.

공통점 

어떤 출력도 0부터 1사이가 나온다. 둘다 1개의 직선이 아니라 곡선이 나온다.

## relu함수

## 하이퍼블릭 함수
2차원 배열을 넣고 1차원을 곱하게 되면 결과값은 1차원 3개가 나온다.

## feedforward
-> 신경망에서 정보가 전방으로 전달되는 인공신경망릉 피드 포워드 신경망이라고 부른다.
입력층,은닉층,출력층 3가지로 구성되어 있다.  
은닉층이 제일 중요하다. 은닉층은 신경망 설계자의 직관과 경험이 의존한다.  
은닉층이 너무 많으면 오버피팅이 일어난다.  
입력층은, 입력 데이터를 받아드린다. 뉴런 수는 입력 데이터의 특성개수와 일치한다.  
출력층은, 해결하고자 하는 문제의 성격에 따라 목적에 맞게 출력층을 설계해야 한다.

○지금까지 배운것이 모두 은닉층에서 사용할 활성화 함수이다.

## 출력층에서 사용하는 함수

## softmax 함수
y 값의 총합은 항상 1이다.  
-> 입력값이 너무 크게 되면 오버플로우가 생기게 된다. 
soft 함수는 지수함수를 사용하는데 지수를 사용하게 되어서 쉽게 아주 큰수가 되어버려서   
나중값이 가장 크게 된다.

## mnist 신경망
입력층 : 784개 출력층 10개 1-은닉층 = 50개 2-은닉층 = 100
3층 신경망 그림파일을 가지고와서 내가 원하는 걸로 자르기

## 텐서프로우의 자료형
다양한 수학식을 계산하기 위한 기본식   
◆ 그래프 생성한 후 그래프 실행하는것이다. 
장점은 모델 구성과 실행을 분리하여 프로그램을 깔끔하게 작성할수있다. 
constant, placeholder,variable 등의 종류가 있다.

## 템플릿
★ 유지 보수하기 쉬운 애플리케이션 작성 시 중요한 점은 깔끔하고 잘 구성된 코드를 작성하는 것이다. 
